name: Deploy to Cloud Run

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  GOOGLE_CLOUD_PROJECT_ID: ${{ secrets.GOOGLE_CLOUD_PROJECT_ID }}
  GOOGLE_CLOUD_PROJECT_NUMBER: ${{ secrets.GOOGLE_CLOUD_PROJECT_NUMBER }}
  GOOGLE_CLOUD_REGION: asia-northeast1
  DEPLOYER_SERVICE_ACCOUNT: ${{ secrets.DEPLOYER_SERVICE_ACCOUNT }}
  WORKLOAD_IDENTITY_POOL_ID: ${{ secrets.WORKLOAD_IDENTITY_POOL_ID }}
  WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
  ARTIFACT_REGISTORY_REPOSITORY: ${{ secrets.ARTIFACT_REGISTORY_REPOSITORY }}
  CLOUD_RUN_WEB_SERVICE: ${{ secrets.CLOUD_RUN_WEB_SERVICE }}
  CLOUD_RUN_WEB_IMAGE: ${{ secrets.CLOUD_RUN_WEB_IMAGE }}
  GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
  GOOGLE_CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
  GOOGLE_REDIRECT_URI: ${{ secrets.GOOGLE_REDIRECT_URI }}
  JWT_SECRET: ${{ secrets.JWT_SECRET }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    permissions:
      contents: read
      id-token: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Setup pnpm
      uses: pnpm/action-setup@v4

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Build frontend
      run: pnpm --filter frontend build
      env:
        VITE_GOOGLE_CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}

    - name: Build backend
      run: pnpm --filter backend build

    - name: Authenticate to Google Cloud
      id: auth
      uses: google-github-actions/auth@v2
      with:
        token_format: access_token
        workload_identity_provider: projects/${{ env.GOOGLE_CLOUD_PROJECT_NUMBER }}/locations/global/workloadIdentityPools/${{ env.WORKLOAD_IDENTITY_POOL_ID }}/providers/${{ env.WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ env.DEPLOYER_SERVICE_ACCOUNT }}

    - name: Configure Docker for Artifact Registry
      run: |
        echo ${{ steps.auth.outputs.access_token }} | docker login -u oauth2accesstoken --password-stdin https://${{ env.GOOGLE_CLOUD_REGION }}-docker.pkg.dev

    - name: Build and push Docker image
      run: |
        IMAGE_TAG=${{ env.GOOGLE_CLOUD_REGION }}-docker.pkg.dev/${{ env.GOOGLE_CLOUD_PROJECT_ID }}/${{ env.ARTIFACT_REGISTORY_REPOSITORY }}/${{ env.CLOUD_RUN_WEB_IMAGE }}:${{ github.sha }}
        docker build -t $IMAGE_TAG .
        docker push $IMAGE_TAG

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy ${{ env.CLOUD_RUN_WEB_SERVICE }} \
          --image=${{ env.GOOGLE_CLOUD_REGION }}-docker.pkg.dev/${{ env.GOOGLE_CLOUD_PROJECT_ID }}/${{ env.ARTIFACT_REGISTORY_REPOSITORY }}/${{ env.CLOUD_RUN_WEB_IMAGE }}:${{ github.sha }} \
          --platform=managed \
          --region=${{ env.GOOGLE_CLOUD_REGION }} \
          --allow-unauthenticated \
          --port=8080 \
          --memory=512Mi \
          --cpu=1 \
          --min-instances=0 \
          --max-instances=10 \
          --concurrency=80 \
          --timeout=300 \
          --set-env-vars="NODE_ENV=production,GOOGLE_CLIENT_ID=${{ env.GOOGLE_CLIENT_ID }},GOOGLE_CLIENT_SECRET=${{ env.GOOGLE_CLIENT_SECRET }},GOOGLE_REDIRECT_URI=${{ env.GOOGLE_REDIRECT_URI }},JWT_SECRET=${{ env.JWT_SECRET }}"

  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Setup pnpm
      uses: pnpm/action-setup@v4

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Run tests
      run: pnpm test

    - name: Run lint
      run: pnpm lint

    - name: Run typecheck
      run: pnpm typecheck